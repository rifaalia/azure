{
	"name": "taskscd",
	"properties": {
		"activities": [
			{
				"name": "SCD1",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "WITH LatestEmployee AS (\n    SELECT \n        EmployeeID,\n        Name,\n        Position,\n        StartDate,\n        EndDate,\n        ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS rn\n    FROM Employee\n)\n\nSELECT\n    EmployeeID,\n    Name,\n    Position,\n    StartDate,\n    EndDate\nFROM LatestEmployee\nWHERE rn = 1;\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sql_hanif",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "Employee"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_rifaalias",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "User"
						}
					}
				]
			},
			{
				"name": "SCD2",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "WITH NumberEmployee AS (\n    SELECT *,\n        ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS rn\n    FROM Employee\n)\n\nSELECT *,\n    case \n        WHEN rn=1 then 1\n        ELSE 0\n    END AS isLatest\nFROM NumberEmployee\nORDER BY EmployeeLogID ASC; \n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sql_hanif",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "Employee"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_rifaalias",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "User_log"
						}
					}
				]
			},
			{
				"name": "SCD3",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "WITH NumberEmployee AS (\n    SELECT *,\n        ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS rn\n    FROM Employee\n),\nPreviousPositionEmployee(\n    SELECT EmployeeID, Position, StartDate\n    FROM(\n        SELECT EmployeeID, Position, StartDate,\n        ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate ASC) AS rn\n        FROM Employee\n    ) sub\n    WHERE sub.rn=1\n)\n\nSELECT e.EmployeeLogID,\n    e.EmployeeID,\n    e.Name,\n    e.Position,\n    fp.PreviousPositionEmployee,\n    fp.StartDate,\n    e.EndDate\nFROM NumberEmployee e \nLEFT JOIN PreviousPositionEmployee fp ON e.EmployeeID=fp.EmployeeID\nWHERE e.rn=1;",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sql_hanif",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "Employee"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_rifaalias",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "User_historical"
						}
					}
				]
			}
		],
		"folder": {
			"name": "SCDTASK"
		},
		"annotations": []
	}
}